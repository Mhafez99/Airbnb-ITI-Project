// <auto-generated />
using System;
using Airbnb.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Airbnb.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20250906130856_updateRelationsv4")]
    partial class updateRelationsv4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Airbnb.Models.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StayId");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("Airbnb.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adults")
                        .HasColumnType("int");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<int>("Infants")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Pets")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("Airbnb.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("StayId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StayId");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("Airbnb.Models.LikedByUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("StayId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StayId");

                    b.ToTable("LikedByUsers");
                });

            modelBuilder.Entity("Airbnb.Models.Loc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("Lan")
                        .HasColumnType("float");

                    b.Property<double?>("Lat")
                        .HasColumnType("float");

                    b.Property<int>("StayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StayId")
                        .IsUnique();

                    b.ToTable("Locs");
                });

            modelBuilder.Entity("Airbnb.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StayId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("HostId");

                    b.HasIndex("StayId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Airbnb.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("At")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("ReviewerFullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewerImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StayId")
                        .HasColumnType("int");

                    b.Property<string>("Txt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("StayId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Airbnb.Models.StatReviews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Accuracy")
                        .HasColumnType("float");

                    b.Property<double>("CheckIn")
                        .HasColumnType("float");

                    b.Property<double>("Cleanliness")
                        .HasColumnType("float");

                    b.Property<double>("Communication")
                        .HasColumnType("float");

                    b.Property<double>("Location")
                        .HasColumnType("float");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId")
                        .IsUnique();

                    b.ToTable("StatReviews");
                });

            modelBuilder.Entity("Airbnb.Models.Stay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bathrooms")
                        .HasColumnType("int");

                    b.Property<int>("Bedrooms")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("Stays");
                });

            modelBuilder.Entity("Airbnb.Models.StayImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("StayId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StayId");

                    b.ToTable("StayImages");
                });

            modelBuilder.Entity("Airbnb.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("HostMsg")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsSuperhost")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PolicyNumber")
                        .HasColumnType("int");

                    b.Property<string>("ResponseTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserMsg")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Airbnb.Models.Amenity", b =>
                {
                    b.HasOne("Airbnb.Models.Stay", "Stay")
                        .WithMany("Amenities")
                        .HasForeignKey("StayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stay");
                });

            modelBuilder.Entity("Airbnb.Models.Guest", b =>
                {
                    b.HasOne("Airbnb.Models.Order", "Order")
                        .WithOne("Guests")
                        .HasForeignKey("Airbnb.Models.Guest", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Airbnb.Models.Label", b =>
                {
                    b.HasOne("Airbnb.Models.Stay", "Stay")
                        .WithMany("Labels")
                        .HasForeignKey("StayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stay");
                });

            modelBuilder.Entity("Airbnb.Models.LikedByUser", b =>
                {
                    b.HasOne("Airbnb.Models.Stay", "Stay")
                        .WithMany("LikedByUsers")
                        .HasForeignKey("StayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stay");
                });

            modelBuilder.Entity("Airbnb.Models.Loc", b =>
                {
                    b.HasOne("Airbnb.Models.Stay", "Stay")
                        .WithOne("Loc")
                        .HasForeignKey("Airbnb.Models.Loc", "StayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Stay");
                });

            modelBuilder.Entity("Airbnb.Models.Order", b =>
                {
                    b.HasOne("Airbnb.Models.User", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Airbnb.Models.User", "Host")
                        .WithMany()
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Airbnb.Models.Stay", "Stay")
                        .WithMany("Orders")
                        .HasForeignKey("StayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Host");

                    b.Navigation("Stay");
                });

            modelBuilder.Entity("Airbnb.Models.Review", b =>
                {
                    b.HasOne("Airbnb.Models.Stay", "Stay")
                        .WithMany("Reviews")
                        .HasForeignKey("StayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Stay");
                });

            modelBuilder.Entity("Airbnb.Models.StatReviews", b =>
                {
                    b.HasOne("Airbnb.Models.Review", "Review")
                        .WithOne("StatReviews")
                        .HasForeignKey("Airbnb.Models.StatReviews", "ReviewId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Review");
                });

            modelBuilder.Entity("Airbnb.Models.Stay", b =>
                {
                    b.HasOne("Airbnb.Models.User", "Host")
                        .WithMany("Stays")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Host");
                });

            modelBuilder.Entity("Airbnb.Models.StayImage", b =>
                {
                    b.HasOne("Airbnb.Models.Stay", "Stay")
                        .WithMany("ImgUrls")
                        .HasForeignKey("StayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stay");
                });

            modelBuilder.Entity("Airbnb.Models.Order", b =>
                {
                    b.Navigation("Guests")
                        .IsRequired();
                });

            modelBuilder.Entity("Airbnb.Models.Review", b =>
                {
                    b.Navigation("StatReviews");
                });

            modelBuilder.Entity("Airbnb.Models.Stay", b =>
                {
                    b.Navigation("Amenities");

                    b.Navigation("ImgUrls");

                    b.Navigation("Labels");

                    b.Navigation("LikedByUsers");

                    b.Navigation("Loc")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Airbnb.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Stays");
                });
#pragma warning restore 612, 618
        }
    }
}
